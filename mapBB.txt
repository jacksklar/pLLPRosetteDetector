//imageJ script to map bounding boxes from csv back to image

macro "map bb to images [g]" {


setForegroundColor(255, 255, 255);
setBatchMode(true);

for (i = 0; i < nResults; i++) {	

	//image = eval("js","ij.measure.ResultsTable().getStringValue(0," + i + ")");
	//image = eval("js","Analyzer.getResultsTable().getStringValue(0," + i + ")");
	
	

	
	imNum = getResult("image", i);
	
	imNum = d2s(imNum, 0);
	
	
	if (lengthOf(imNum) == 1) {
		imNum = "000" + imNum;
	}
	if (lengthOf(imNum) == 2) {
		imNum = "00" + imNum;
	}
	if (lengthOf(imNum) == 3) {
		imNum = "0" + imNum;
	}


	
	image = "image_" + imNum + ".tif";
	score = getResult("score", i);
	xpos = getResult("x", i);
	ypos = getResult("y", i);
	
	
	width = getResult("w", i);
	height = getResult("h", i);

	FileToOpen = "G:/for_NN/upscaled_test/" + image;
	
	open(FileToOpen);
	makeRectangle(xpos*1024, ypos*256, width*1024, height*256);
	run("Draw", "slice");
	run("Save");
	close();
}

setBatchMode(false);

}

macro "Import Results Table" {
    
	 requires("1.35r");
     lineseparator = "\n";
     cellseparator = ",\t";

     // copies the whole RT to an array of lines
     lines=split(File.openAsString("C:/Users/damia/Downloads/output3.csv"), lineseparator);

     // recreates the columns headers
     labels=split(lines[0], cellseparator);
     if (labels[0]==" ")
        k=1; // it is an ImageJ Results table, skip first column
     else
        k=0; // it is not a Results table, load all columns
     for (j=k; j<labels.length; j++)
        setResult(labels[j],0,0);

     // dispatches the data into the new RT
     run("Clear Results");
     for (i=1; i<lines.length; i++) {
        items=split(lines[i], cellseparator);
        for (j=k; j<items.length; j++)
           setResult(labels[j],i-1,items[j]);
     }
     updateResults();
 }